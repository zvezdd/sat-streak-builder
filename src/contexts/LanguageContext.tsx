import React, { createContext, useContext, useEffect, useState } from 'react';
import { useAuth } from '@/hooks/useAuth';
import { supabase } from '@/integrations/supabase/client';

interface LanguageContextType {
  language: 'en' | 'ru';
  setLanguage: (lang: 'en' | 'ru') => void;
  t: (key: string, params?: Record<string, string | number>) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

// Translation objects
const translations = {
  en: {
    // Header
    'header.welcome': 'Welcome back!',
    'header.signOut': 'Sign Out',
    
    // Loading
    'loading.progress': 'Loading your progress...',
    'loading.questions': 'Loading questions...',
    
    // Streak Card
    'streak.current': 'Current Streak',
    'streak.best': 'Best Streak',
    'streak.todayProgress': "Today's Progress",
    'streak.complete': 'Complete!',
    'streak.viewRecords': 'View Streak Records',
    'streak.day': 'day',
    'streak.days': 'days',
    
    // Daily Challenge
    'challenge.title': 'Daily Challenge',
    'challenge.question': 'Question',
    'challenge.of': 'of',
    'challenge.complete': 'Challenge Complete! üéâ',
    'challenge.gotCorrect': 'You got {count} questions correct!',
    'challenge.accuracy': 'Accuracy: {percent}%',
    'challenge.tryAgain': 'Try Again',
    'challenge.submitAnswer': 'Submit Answer',
    'challenge.correct': 'Correct!',
    'challenge.incorrect': 'Incorrect',
    'challenge.noQuestions': 'No questions available. Please try again later.',
    'challenge.retry': 'Retry',
    'challenge.completeToast': 'Daily Challenge Complete!',
    'challenge.progressToast': 'Progress Saved',
    'challenge.completeDesc': 'Great job! You got {correct} out of {total} correct.',
    'challenge.progressDesc': 'Progress saved: {correct}/{total} correct',
    
    // Question Card
    'question.math': 'math',
    'question.english': 'english',
    'question.easy': 'easy',
    'question.medium': 'medium',
    'question.hard': 'hard',
    
    // Friends
    'friends.title': 'Friends',
    'friends.addFriend': 'Add Friend',
    'friends.search': 'Search by username...',
    'friends.noResults': 'No users found',
    'friends.sendRequest': 'Send Request',
    'friends.requestSent': 'Request Sent',
    'friends.accept': 'Accept',
    'friends.decline': 'Decline',
    'friends.completedToday': 'Completed Today',
    'friends.notDoneToday': 'Not Done Today',
    'friends.noFriends': 'No friends yet',
    'friends.addFirst': 'Add some friends to see their progress!',
    'friends.friendRequests': 'Friend Requests',
    'friends.from': 'from',
    'friends.requestAlreadySent': 'Friend request already sent!',
    'friends.requestSentSuccess': 'Friend request sent!',
    'friends.cannotAddSelf': 'You cannot add yourself as a friend!',
    'friends.alreadyFriends': 'You are already friends with this user!',
    'friends.requestAccepted': 'Friend request accepted!',
    'friends.requestDeclined': 'Friend request declined!',
    
    // Auth
    'auth.title': 'SAT Prep Master',
    'auth.subtitle': 'Build your streak, master the SAT',
    'auth.welcome': 'Welcome',
    'auth.welcomeDesc': 'Sign in to your account or create a new one to start your SAT prep journey',
    'auth.signIn': 'Sign In',
    'auth.signUp': 'Sign Up',
    'auth.continueGoogle': 'Continue with Google',
    'auth.continueEmail': 'Or continue with email',
    'auth.email': 'Email',
    'auth.password': 'Password',
    'auth.username': 'Username',
    'auth.enterEmail': 'Enter your email',
    'auth.enterPassword': 'Enter your password',
    'auth.createPassword': 'Create a password',
    'auth.chooseUsername': 'Choose a unique username',
    'auth.usernamePattern': 'Username can only contain letters, numbers and underscores',
    'auth.signingIn': 'Signing in...',
    'auth.creatingAccount': 'Creating account...',
    'auth.createAccount': 'Create Account',
    'auth.errorSignIn': 'Error signing in',
    'auth.errorSignUp': 'Error signing up',
    'auth.errorGoogle': 'Error with Google sign in',
    'auth.checkEmail': 'Check your email',
    'auth.confirmationSent': 'We sent you a confirmation link!',
    
    // Profile
    'profile.title': 'Profile',
    'profile.username': 'Username',
    'profile.email': 'Email',
    'profile.memberSince': 'Member since',
    'profile.currentStreak': 'Current Streak',
    'profile.longestStreak': 'Longest Streak',
    'profile.uploadAvatar': 'Upload Avatar',
    'profile.signOut': 'Sign Out',
    'profile.uploading': 'Uploading...',
    'profile.language': 'Language',
    'profile.languageEn': 'English',
    'profile.languageRu': '–†—É—Å—Å–∫–∏–π',
    'profile.fileTooLarge': 'File too large',
    'profile.fileTooLargeDesc': 'Please select a file smaller than 5MB',
    'profile.invalidFileType': 'Invalid file type',
    'profile.invalidFileTypeDesc': 'Please select a JPG, PNG, or WebP image',
    'profile.uploadSuccess': 'Success',
    'profile.uploadSuccessDesc': 'Avatar updated successfully!',
    'profile.uploadError': 'Upload failed',
    'profile.uploadErrorDesc': 'Failed to upload avatar. Please try again.',
    'profile.languageUpdated': 'Language updated',
    'profile.languageUpdatedDesc': 'Your language preference has been saved.',
    
    // Streak Records
    'streakRecords.title': 'Streak Records',
    'streakRecords.back': 'Back',
    'streakRecords.friends': 'Friends',
    'streakRecords.friendsRecords': 'Friends Records',
    'streakRecords.myRecords': 'My Records',
    'streakRecords.noFriendsText': 'You have no friends to track streaks yet.',
    'streakRecords.noFriendsRecords': 'No friends records to display yet.',
    'streakRecords.noMyRecords': 'You have no streak records yet.',
    'streakRecords.best': 'Best: {days} days',
    'streakRecords.currentStreak': 'Current Streak',
    'streakRecords.personalRecord': 'Personal Record',
    
    // NotFound
    'notFound.title': '404',
    'notFound.subtitle': 'Oops! Page not found',
    'notFound.home': 'Return to Home',
    
    // Errors
    'error.loadingQuestions': 'Error loading questions',
    'error.tryAgain': 'Please try again',
    'error.savingProgress': 'Error saving progress',
  },
  ru: {
    // Header
    'header.welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
    'header.signOut': '–í—ã–π—Ç–∏',
    
    // Loading
    'loading.progress': '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...',
    'loading.questions': '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤...',
    
    // Streak Card
    'streak.current': '–¢–µ–∫—É—â–∏–π —Å—Ç—Ä–∏–∫',
    'streak.best': '–õ—É—á—à–∏–π —Å—Ç—Ä–∏–∫',
    'streak.todayProgress': '–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–µ–≥–æ–¥–Ω—è',
    'streak.complete': '–ó–∞–≤–µ—Ä—à–µ–Ω–æ!',
    'streak.viewRecords': '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∫–æ—Ä–¥—ã —Å—Ç—Ä–∏–∫–æ–≤',
    'streak.day': '–¥–µ–Ω—å',
    'streak.days': '–¥–Ω–µ–π',
    
    // Daily Challenge
    'challenge.title': '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
    'challenge.question': '–í–æ–ø—Ä–æ—Å',
    'challenge.of': '–∏–∑',
    'challenge.complete': '–ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! üéâ',
    'challenge.gotCorrect': '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ {count} –≤–æ–ø—Ä–æ—Å–æ–≤!',
    'challenge.accuracy': '–¢–æ—á–Ω–æ—Å—Ç—å: {percent}%',
    'challenge.tryAgain': '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑',
    'challenge.submitAnswer': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç',
    'challenge.correct': '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!',
    'challenge.incorrect': '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ',
    'challenge.noQuestions': '–í–æ–ø—Ä–æ—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
    'challenge.retry': '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å',
    'challenge.completeToast': '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!',
    'challenge.progressToast': '–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω',
    'challenge.completeDesc': '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ {correct} –∏–∑ {total}.',
    'challenge.progressDesc': '–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {correct}/{total} –ø—Ä–∞–≤–∏–ª—å–Ω–æ',
    
    // Question Card
    'question.math': '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
    'question.english': '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π',
    'question.easy': '–ª–µ–≥–∫–∏–π',
    'question.medium': '—Å—Ä–µ–¥–Ω–∏–π',
    'question.hard': '—Å–ª–æ–∂–Ω—ã–π',
    
    // Friends
    'friends.title': '–î—Ä—É–∑—å—è',
    'friends.addFriend': '–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞',
    'friends.search': '–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...',
    'friends.noResults': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
    'friends.sendRequest': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å',
    'friends.requestSent': '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω',
    'friends.accept': '–ü—Ä–∏–Ω—è—Ç—å',
    'friends.decline': '–û—Ç–∫–ª–æ–Ω–∏—Ç—å',
    'friends.completedToday': '–í—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è',
    'friends.notDoneToday': '–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è',
    'friends.noFriends': '–ü–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π',
    'friends.addFirst': '–î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–∑–µ–π, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –∏—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å!',
    'friends.friendRequests': '–ó–∞–ø—Ä–æ—Å—ã –≤ –¥—Ä—É–∑—å—è',
    'friends.from': '–æ—Ç',
    'friends.requestAlreadySent': '–ó–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!',
    'friends.requestSentSuccess': '–ó–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!',
    'friends.cannotAddSelf': '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è –≤ –¥—Ä—É–∑—å—è!',
    'friends.alreadyFriends': '–í—ã —É–∂–µ –¥—Ä—É–∑—å—è —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!',
    'friends.requestAccepted': '–ó–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è –ø—Ä–∏–Ω—è—Ç!',
    'friends.requestDeclined': '–ó–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è –æ—Ç–∫–ª–æ–Ω–µ–Ω!',
    
    // Auth
    'auth.title': 'SAT Prep Master',
    'auth.subtitle': '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å—Ç—Ä–∏–∫, –æ—Å–≤–∞–∏–≤–∞–π—Ç–µ SAT',
    'auth.welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
    'auth.welcomeDesc': '–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ SAT',
    'auth.signIn': '–í–æ–π—Ç–∏',
    'auth.signUp': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
    'auth.continueGoogle': '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å Google',
    'auth.continueEmail': '–ò–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å email',
    'auth.email': 'Email',
    'auth.password': '–ü–∞—Ä–æ–ª—å',
    'auth.username': '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    'auth.enterEmail': '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email',
    'auth.enterPassword': '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å',
    'auth.createPassword': '–°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å',
    'auth.chooseUsername': '–í—ã–±–µ—Ä–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    'auth.usernamePattern': '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è',
    'auth.signingIn': '–í—Ö–æ–¥...',
    'auth.creatingAccount': '–°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞...',
    'auth.createAccount': '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç',
    'auth.errorSignIn': '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞',
    'auth.errorSignUp': '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
    'auth.errorGoogle': '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google',
    'auth.checkEmail': '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à email',
    'auth.confirmationSent': '–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!',
    
    // Profile
    'profile.title': '–ü—Ä–æ—Ñ–∏–ª—å',
    'profile.username': '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    'profile.email': 'Email',
    'profile.memberSince': '–£—á–∞—Å—Ç–Ω–∏–∫ —Å',
    'profile.currentStreak': '–¢–µ–∫—É—â–∏–π —Å—Ç—Ä–∏–∫',
    'profile.longestStreak': '–õ—É—á—à–∏–π —Å—Ç—Ä–∏–∫',
    'profile.uploadAvatar': '–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä',
    'profile.signOut': '–í—ã–π—Ç–∏',
    'profile.uploading': '–ó–∞–≥—Ä—É–∑–∫–∞...',
    'profile.language': '–Ø–∑—ã–∫',
    'profile.languageEn': 'English',
    'profile.languageRu': '–†—É—Å—Å–∫–∏–π',
    'profile.fileTooLarge': '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π',
    'profile.fileTooLargeDesc': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Ä–∞–∑–º–µ—Ä–æ–º –º–µ–Ω–µ–µ 5–ú–ë',
    'profile.invalidFileType': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞',
    'profile.invalidFileTypeDesc': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ JPG, PNG –∏–ª–∏ WebP',
    'profile.uploadSuccess': '–£—Å–ø–µ—Ö',
    'profile.uploadSuccessDesc': '–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!',
    'profile.uploadError': '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏',
    'profile.uploadErrorDesc': '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
    'profile.languageUpdated': '–Ø–∑—ã–∫ –æ–±–Ω–æ–≤–ª–µ–Ω',
    'profile.languageUpdatedDesc': '–í–∞—à–∏ —è–∑—ã–∫–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.',
    
    // Streak Records
    'streakRecords.title': '–†–µ–∫–æ—Ä–¥—ã —Å—Ç—Ä–∏–∫–æ–≤',
    'streakRecords.back': '–ù–∞–∑–∞–¥',
    'streakRecords.friends': '–î—Ä—É–∑—å—è',
    'streakRecords.friendsRecords': '–†–µ–∫–æ—Ä–¥—ã –¥—Ä—É–∑–µ–π',
    'streakRecords.myRecords': '–ú–æ–∏ —Ä–µ–∫–æ—Ä–¥—ã',
    'streakRecords.noFriendsText': '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç—Ä–∏–∫–æ–≤.',
    'streakRecords.noFriendsRecords': '–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∫–æ—Ä–¥–æ–≤ –¥—Ä—É–∑–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.',
    'streakRecords.noMyRecords': '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∫–æ—Ä–¥–æ–≤ —Å—Ç—Ä–∏–∫–æ–≤.',
    'streakRecords.best': '–õ—É—á—à–∏–π: {days} –¥–Ω–µ–π',
    'streakRecords.currentStreak': '–¢–µ–∫—É—â–∏–π —Å—Ç—Ä–∏–∫',
    'streakRecords.personalRecord': '–õ–∏—á–Ω—ã–π —Ä–µ–∫–æ—Ä–¥',
    
    // NotFound
    'notFound.title': '404',
    'notFound.subtitle': '–£–ø—Å! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
    'notFound.home': '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é',
    
    // Errors
    'error.loadingQuestions': '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤',
    'error.tryAgain': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
    'error.savingProgress': '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
  },
};

interface LanguageProviderProps {
  children: React.ReactNode;
}

export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  const [language, setLanguageState] = useState<'en' | 'ru'>('en');
  const { user } = useAuth();

  // Load user's language preference
  useEffect(() => {
    const loadLanguagePreference = async () => {
      if (user) {
        try {
          const { data: profile } = await supabase
            .from('profiles')
            .select('language')
            .eq('user_id', user.id)
            .single();

          if (profile?.language) {
            setLanguageState(profile.language as 'en' | 'ru');
          }
        } catch (error) {
          console.error('Error loading language preference:', error);
        }
      }
    };

    loadLanguagePreference();
  }, [user]);

  const setLanguage = async (lang: 'en' | 'ru') => {
    setLanguageState(lang);
    
    // Save to database if user is logged in
    if (user) {
      try {
        await supabase
          .from('profiles')
          .update({ language: lang })
          .eq('user_id', user.id);
      } catch (error) {
        console.error('Error saving language preference:', error);
      }
    }
  };

  const t = (key: string, params?: Record<string, string | number>): string => {
    let translation = translations[language]?.[key] || translations.en[key] || key;
    
    // Replace parameters if provided
    if (params) {
      Object.entries(params).forEach(([paramKey, paramValue]) => {
        translation = translation.replace(`{${paramKey}}`, String(paramValue));
      });
    }
    
    return translation;
  };

  const value: LanguageContextType = {
    language,
    setLanguage,
    t,
  };

  return (
    <LanguageContext.Provider value={value}>
      {children}
    </LanguageContext.Provider>
  );
};